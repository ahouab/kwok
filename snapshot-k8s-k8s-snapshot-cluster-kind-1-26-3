apiVersion: v1
items:
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl
      cm5ldGVzMB4XDTIzMDQwMjIwNTUxOFoXDTMzMDMzMDIwNTUxOFowFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANN5
      aX93NlecWhoYFdg0AA3BYpTKBR8jZQRklU+8oKksadHghxHXBoRp0fKiwtt9VHBf
      hvphPaboHTSado7YHWcS0G1UDtd2Bv42l6QoHizm+DbrCF9dXWZZhLy5fPooNc/p
      o69Ba16vSdAig9KXtsgRYB55hf+Rigg5BezK3edO004fp1jRs//Iyyl6F6SkgpY9
      0M4JOx6kNbpSP1oQS1BuuAzepAdFkOi07R8Sta/EWpGITdSjfRi3sP/TWUit6DWc
      Uwld7FLfZTxGpi63quUq7pDBt0RMEVBnqMHLpMMcZCO2KihcCvJcdTuW0U5kB8H1
      UaF2Oq0d9K7RUZea7vcCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB
      /wQFMAMBAf8wHQYDVR0OBBYEFGQV55pKDS3ulXD0JWrbowlCNGl7MBUGA1UdEQQO
      MAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAHDPos7pzOuQ+Pt+2AvI
      BOBZj1NTiZ/Me2IqODlRSck/ihVn2xEcoeaF+fF5XZwMGVoQNF0qtNnPLZ97HY9V
      1pO2jg1EPnUvrJeoNYnmCVO2y048JUeu4HiQ0J4BvW2k16OLPyO/FgD1WXgan5ls
      Iryz8i+t2CFSRs2L5HL5KkCVnmmpuYriBJpeIfMa5GTIVsFAn6PxVeKQPY94HFE/
      RQnmiLPV3Y1vUiKD4fSIqPlq7PxkgOcOq+cZP7E6ap4xAVDEoOyFTd4gg5WhfBQd
      Do1cHsEWvAsTznnZhj5zGffRoN8KOuTb0gTWTpF2Tk8u7Uxuc9ln0ZEKwHHHv9PJ
      IIY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2023-04-02T20:55:42Z"
    name: kube-root-ca.crt
    namespace: default
    resourceVersion: "370"
    uid: 3cc0eb25-48a3-4288-91d3-1e0d361cf1b5
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl
      cm5ldGVzMB4XDTIzMDQwMjIwNTUxOFoXDTMzMDMzMDIwNTUxOFowFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANN5
      aX93NlecWhoYFdg0AA3BYpTKBR8jZQRklU+8oKksadHghxHXBoRp0fKiwtt9VHBf
      hvphPaboHTSado7YHWcS0G1UDtd2Bv42l6QoHizm+DbrCF9dXWZZhLy5fPooNc/p
      o69Ba16vSdAig9KXtsgRYB55hf+Rigg5BezK3edO004fp1jRs//Iyyl6F6SkgpY9
      0M4JOx6kNbpSP1oQS1BuuAzepAdFkOi07R8Sta/EWpGITdSjfRi3sP/TWUit6DWc
      Uwld7FLfZTxGpi63quUq7pDBt0RMEVBnqMHLpMMcZCO2KihcCvJcdTuW0U5kB8H1
      UaF2Oq0d9K7RUZea7vcCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB
      /wQFMAMBAf8wHQYDVR0OBBYEFGQV55pKDS3ulXD0JWrbowlCNGl7MBUGA1UdEQQO
      MAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAHDPos7pzOuQ+Pt+2AvI
      BOBZj1NTiZ/Me2IqODlRSck/ihVn2xEcoeaF+fF5XZwMGVoQNF0qtNnPLZ97HY9V
      1pO2jg1EPnUvrJeoNYnmCVO2y048JUeu4HiQ0J4BvW2k16OLPyO/FgD1WXgan5ls
      Iryz8i+t2CFSRs2L5HL5KkCVnmmpuYriBJpeIfMa5GTIVsFAn6PxVeKQPY94HFE/
      RQnmiLPV3Y1vUiKD4fSIqPlq7PxkgOcOq+cZP7E6ap4xAVDEoOyFTd4gg5WhfBQd
      Do1cHsEWvAsTznnZhj5zGffRoN8KOuTb0gTWTpF2Tk8u7Uxuc9ln0ZEKwHHHv9PJ
      IIY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2023-04-02T20:55:42Z"
    name: kube-root-ca.crt
    namespace: kube-node-lease
    resourceVersion: "374"
    uid: c3dbd513-6653-4858-9f1f-bba931b51729
- apiVersion: v1
  data:
    jws-kubeconfig-abcdef: eyJhbGciOiJIUzI1NiIsImtpZCI6ImFiY2RlZiJ9..qiOEkCmwiUV1dB2JZsrpk6Af8WTMP_0qQghxrfq5Cdo
    kubeconfig: |
      apiVersion: v1
      clusters:
      - cluster:
          certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1EUXdNakl3TlRVeE9Gb1hEVE16TURNek1ESXdOVFV4T0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTk41CmFYOTNObGVjV2hvWUZkZzBBQTNCWXBUS0JSOGpaUVJrbFUrOG9La3NhZEhnaHhIWEJvUnAwZktpd3R0OVZIQmYKaHZwaFBhYm9IVFNhZG83WUhXY1MwRzFVRHRkMkJ2NDJsNlFvSGl6bStEYnJDRjlkWFdaWmhMeTVmUG9vTmMvcApvNjlCYTE2dlNkQWlnOUtYdHNnUllCNTVoZitSaWdnNUJlekszZWRPMDA0ZnAxalJzLy9JeXlsNkY2U2tncFk5CjBNNEpPeDZrTmJwU1Axb1FTMUJ1dUF6ZXBBZEZrT2kwN1I4U3RhL0VXcEdJVGRTamZSaTNzUC9UV1VpdDZEV2MKVXdsZDdGTGZaVHhHcGk2M3F1VXE3cERCdDBSTUVWQm5xTUhMcE1NY1pDTzJLaWhjQ3ZKY2RUdVcwVTVrQjhIMQpVYUYyT3EwZDlLN1JVWmVhN3ZjQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZHUVY1NXBLRFMzdWxYRDBKV3Jib3dsQ05HbDdNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSERQb3M3cHpPdVErUHQrMkF2SQpCT0JaajFOVGlaL01lMklxT0RsUlNjay9paFZuMnhFY29lYUYrZkY1WFp3TUdWb1FORjBxdE5uUExaOTdIWTlWCjFwTzJqZzFFUG5VdnJKZW9OWW5tQ1ZPMnkwNDhKVWV1NEhpUTBKNEJ2VzJrMTZPTFB5Ty9GZ0QxV1hnYW41bHMKSXJ5ejhpK3QyQ0ZTUnMyTDVITDVLa0NWbm1tcHVZcmlCSnBlSWZNYTVHVElWc0ZBbjZQeFZlS1FQWTk0SEZFLwpSUW5taUxQVjNZMXZVaUtENGZTSXFQbHE3UHhrZ09jT3ErY1pQN0U2YXA0eEFWREVvT3lGVGQ0Z2c1V2hmQlFkCkRvMWNIc0VXdkFzVHpublpoajV6R2ZmUm9OOEtPdVRiMGdUV1RwRjJUazh1N1V4dWM5bG4wWkVLd0hISHY5UEoKSUlZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          server: https://kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane:6443
        name: ""
      contexts: null
      current-context: ""
      kind: Config
      preferences: {}
      users: null
  kind: ConfigMap
  metadata:
    creationTimestamp: "2023-04-02T20:55:29Z"
    name: cluster-info
    namespace: kube-public
    resourceVersion: "375"
    uid: d1f661d2-3909-4a6f-a5dd-25fabf4f3abf
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl
      cm5ldGVzMB4XDTIzMDQwMjIwNTUxOFoXDTMzMDMzMDIwNTUxOFowFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANN5
      aX93NlecWhoYFdg0AA3BYpTKBR8jZQRklU+8oKksadHghxHXBoRp0fKiwtt9VHBf
      hvphPaboHTSado7YHWcS0G1UDtd2Bv42l6QoHizm+DbrCF9dXWZZhLy5fPooNc/p
      o69Ba16vSdAig9KXtsgRYB55hf+Rigg5BezK3edO004fp1jRs//Iyyl6F6SkgpY9
      0M4JOx6kNbpSP1oQS1BuuAzepAdFkOi07R8Sta/EWpGITdSjfRi3sP/TWUit6DWc
      Uwld7FLfZTxGpi63quUq7pDBt0RMEVBnqMHLpMMcZCO2KihcCvJcdTuW0U5kB8H1
      UaF2Oq0d9K7RUZea7vcCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB
      /wQFMAMBAf8wHQYDVR0OBBYEFGQV55pKDS3ulXD0JWrbowlCNGl7MBUGA1UdEQQO
      MAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAHDPos7pzOuQ+Pt+2AvI
      BOBZj1NTiZ/Me2IqODlRSck/ihVn2xEcoeaF+fF5XZwMGVoQNF0qtNnPLZ97HY9V
      1pO2jg1EPnUvrJeoNYnmCVO2y048JUeu4HiQ0J4BvW2k16OLPyO/FgD1WXgan5ls
      Iryz8i+t2CFSRs2L5HL5KkCVnmmpuYriBJpeIfMa5GTIVsFAn6PxVeKQPY94HFE/
      RQnmiLPV3Y1vUiKD4fSIqPlq7PxkgOcOq+cZP7E6ap4xAVDEoOyFTd4gg5WhfBQd
      Do1cHsEWvAsTznnZhj5zGffRoN8KOuTb0gTWTpF2Tk8u7Uxuc9ln0ZEKwHHHv9PJ
      IIY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2023-04-02T20:55:42Z"
    name: kube-root-ca.crt
    namespace: kube-public
    resourceVersion: "373"
    uid: 3dee3542-4178-4dc0-afd6-75e468249dba
- apiVersion: v1
  data:
    Corefile: |
      .:53 {
          errors
          health {
             lameduck 5s
          }
          ready
          kubernetes cluster.local in-addr.arpa ip6.arpa {
             pods insecure
             fallthrough in-addr.arpa ip6.arpa
             ttl 30
          }
          prometheus :9153
          forward . /etc/resolv.conf {
             max_concurrent 1000
          }
          cache 30
          loop
          reload
          loadbalance
      }
  kind: ConfigMap
  metadata:
    creationTimestamp: "2023-04-02T20:55:29Z"
    name: coredns
    namespace: kube-system
    resourceVersion: "232"
    uid: 9791428b-2ce7-467a-9dda-8061befcb4b0
- apiVersion: v1
  data:
    client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl
      cm5ldGVzMB4XDTIzMDQwMjIwNTUxOFoXDTMzMDMzMDIwNTUxOFowFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANN5
      aX93NlecWhoYFdg0AA3BYpTKBR8jZQRklU+8oKksadHghxHXBoRp0fKiwtt9VHBf
      hvphPaboHTSado7YHWcS0G1UDtd2Bv42l6QoHizm+DbrCF9dXWZZhLy5fPooNc/p
      o69Ba16vSdAig9KXtsgRYB55hf+Rigg5BezK3edO004fp1jRs//Iyyl6F6SkgpY9
      0M4JOx6kNbpSP1oQS1BuuAzepAdFkOi07R8Sta/EWpGITdSjfRi3sP/TWUit6DWc
      Uwld7FLfZTxGpi63quUq7pDBt0RMEVBnqMHLpMMcZCO2KihcCvJcdTuW0U5kB8H1
      UaF2Oq0d9K7RUZea7vcCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB
      /wQFMAMBAf8wHQYDVR0OBBYEFGQV55pKDS3ulXD0JWrbowlCNGl7MBUGA1UdEQQO
      MAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAHDPos7pzOuQ+Pt+2AvI
      BOBZj1NTiZ/Me2IqODlRSck/ihVn2xEcoeaF+fF5XZwMGVoQNF0qtNnPLZ97HY9V
      1pO2jg1EPnUvrJeoNYnmCVO2y048JUeu4HiQ0J4BvW2k16OLPyO/FgD1WXgan5ls
      Iryz8i+t2CFSRs2L5HL5KkCVnmmpuYriBJpeIfMa5GTIVsFAn6PxVeKQPY94HFE/
      RQnmiLPV3Y1vUiKD4fSIqPlq7PxkgOcOq+cZP7E6ap4xAVDEoOyFTd4gg5WhfBQd
      Do1cHsEWvAsTznnZhj5zGffRoN8KOuTb0gTWTpF2Tk8u7Uxuc9ln0ZEKwHHHv9PJ
      IIY=
      -----END CERTIFICATE-----
    requestheader-allowed-names: '["front-proxy-client"]'
    requestheader-client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIDCjCCAfKgAwIBAgIBADANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDEw5mcm9u
      dC1wcm94eS1jYTAeFw0yMzA0MDIyMDU1MThaFw0zMzAzMzAyMDU1MThaMBkxFzAV
      BgNVBAMTDmZyb250LXByb3h5LWNhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
      CgKCAQEApjL8v1twqyp7bzhNv6KB5MFQdzBN++e/zUHWFfZHUDqryN3msNPJUuYt
      CTRuv2xAlj5yK2ewJ8rInRO01KxRHK3YWK9t8Oe4lam6zN9Zq0mO3o4iS2rkeNWH
      rmNeDsuB0oimVNAqBMLkiLrKQPLCAiy3MvQmyC/qrMdXjACSI9WwpwOxaK3A/OoU
      CBTAMcxcNCkM2y2+xnLrEPRf2/Ou8kaXrNghSXGLCm9U93NDyLSC2Ed/EWVWG4JA
      2xKvbIxBidffeCswEJlh8Dhja6LE4asvDVYaLcqK0d4AvxWJWBLlYgaSjLoaLtKy
      J9AWHoMeFS2F8zgAbWrg9WzQhoMJlwIDAQABo10wWzAOBgNVHQ8BAf8EBAMCAqQw
      DwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU6X01XyN+3nLflKEfJ/6rFzC5Cf4w
      GQYDVR0RBBIwEIIOZnJvbnQtcHJveHktY2EwDQYJKoZIhvcNAQELBQADggEBAB97
      n2VjonZ0yTCPOucZk/+qoc1iF6yN7N+D/uovsOzWSv3K7eNj7HuMIW1gfWHuZqC0
      oyD4xjioZOMiaqdA3qoRXV4R8XBqvxlWjjCHBw+cKAlS5B7bTei8DX4DQqXr69BP
      xRKVVlotSoxCuazH74gxljLq1vGe3VjVYkUw8zArsony/zXOFM5wo4QAVq3Qyi8E
      44PGiSjQG1GToEn2SmxFWOQxRPkNZiz6IGLDE4J4fclS5s7yTyvRzjRfFhksgE3k
      GaBMevaT8x35Vbq/1rXbGpfPStrs49DL74ZK0ptFSsyPFnfSt24VVmHaDbL1JmUZ
      HlRcZ6hXH7SLyGkisbI=
      -----END CERTIFICATE-----
    requestheader-extra-headers-prefix: '["X-Remote-Extra-"]'
    requestheader-group-headers: '["X-Remote-Group"]'
    requestheader-username-headers: '["X-Remote-User"]'
  kind: ConfigMap
  metadata:
    creationTimestamp: "2023-04-02T20:55:26Z"
    name: extension-apiserver-authentication
    namespace: kube-system
    resourceVersion: "46"
    uid: 674b5380-59a2-4400-9ae2-07f6c6e3a324
- apiVersion: v1
  data:
    config.conf: |-
      apiVersion: kubeproxy.config.k8s.io/v1alpha1
      bindAddress: 0.0.0.0
      bindAddressHardFail: false
      clientConnection:
        acceptContentTypes: ""
        burst: 0
        contentType: ""
        kubeconfig: /var/lib/kube-proxy/kubeconfig.conf
        qps: 0
      clusterCIDR: 10.244.0.0/16
      configSyncPeriod: 0s
      conntrack:
        maxPerCore: 0
        min: null
        tcpCloseWaitTimeout: null
        tcpEstablishedTimeout: null
      detectLocal:
        bridgeInterface: ""
        interfaceNamePrefix: ""
      detectLocalMode: ""
      enableProfiling: false
      healthzBindAddress: ""
      hostnameOverride: ""
      iptables:
        localhostNodePorts: null
        masqueradeAll: false
        masqueradeBit: null
        minSyncPeriod: 1s
        syncPeriod: 0s
      ipvs:
        excludeCIDRs: null
        minSyncPeriod: 0s
        scheduler: ""
        strictARP: false
        syncPeriod: 0s
        tcpFinTimeout: 0s
        tcpTimeout: 0s
        udpTimeout: 0s
      kind: KubeProxyConfiguration
      metricsBindAddress: ""
      mode: iptables
      nodePortAddresses: null
      oomScoreAdj: null
      portRange: ""
      showHiddenMetricsForVersion: ""
      winkernel:
        enableDSR: false
        forwardHealthCheckVip: false
        networkName: ""
        rootHnsEndpointName: ""
        sourceVip: ""
    kubeconfig.conf: |-
      apiVersion: v1
      kind: Config
      clusters:
      - cluster:
          certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          server: https://kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane:6443
        name: default
      contexts:
      - context:
          cluster: default
          namespace: default
          user: default
        name: default
      current-context: default
      users:
      - name: default
        user:
          tokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
  kind: ConfigMap
  metadata:
    creationTimestamp: "2023-04-02T20:55:29Z"
    labels:
      app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "239"
    uid: 0f4ff956-3a4c-4d6b-946f-ca35629d53f3
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl
      cm5ldGVzMB4XDTIzMDQwMjIwNTUxOFoXDTMzMDMzMDIwNTUxOFowFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANN5
      aX93NlecWhoYFdg0AA3BYpTKBR8jZQRklU+8oKksadHghxHXBoRp0fKiwtt9VHBf
      hvphPaboHTSado7YHWcS0G1UDtd2Bv42l6QoHizm+DbrCF9dXWZZhLy5fPooNc/p
      o69Ba16vSdAig9KXtsgRYB55hf+Rigg5BezK3edO004fp1jRs//Iyyl6F6SkgpY9
      0M4JOx6kNbpSP1oQS1BuuAzepAdFkOi07R8Sta/EWpGITdSjfRi3sP/TWUit6DWc
      Uwld7FLfZTxGpi63quUq7pDBt0RMEVBnqMHLpMMcZCO2KihcCvJcdTuW0U5kB8H1
      UaF2Oq0d9K7RUZea7vcCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB
      /wQFMAMBAf8wHQYDVR0OBBYEFGQV55pKDS3ulXD0JWrbowlCNGl7MBUGA1UdEQQO
      MAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAHDPos7pzOuQ+Pt+2AvI
      BOBZj1NTiZ/Me2IqODlRSck/ihVn2xEcoeaF+fF5XZwMGVoQNF0qtNnPLZ97HY9V
      1pO2jg1EPnUvrJeoNYnmCVO2y048JUeu4HiQ0J4BvW2k16OLPyO/FgD1WXgan5ls
      Iryz8i+t2CFSRs2L5HL5KkCVnmmpuYriBJpeIfMa5GTIVsFAn6PxVeKQPY94HFE/
      RQnmiLPV3Y1vUiKD4fSIqPlq7PxkgOcOq+cZP7E6ap4xAVDEoOyFTd4gg5WhfBQd
      Do1cHsEWvAsTznnZhj5zGffRoN8KOuTb0gTWTpF2Tk8u7Uxuc9ln0ZEKwHHHv9PJ
      IIY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2023-04-02T20:55:42Z"
    name: kube-root-ca.crt
    namespace: kube-system
    resourceVersion: "372"
    uid: 5dbc6a1e-3d83-4aa7-9ce4-1a37ef6af94d
- apiVersion: v1
  data:
    ClusterConfiguration: |
      apiServer:
        certSANs:
        - localhost
        - 0.0.0.0
        extraArgs:
          authorization-mode: Node,RBAC
          runtime-config: ""
        timeoutForControlPlane: 4m0s
      apiVersion: kubeadm.k8s.io/v1beta3
      certificatesDir: /etc/kubernetes/pki
      clusterName: kwok-k8s-snapshot-cluster-kind-1-26-3
      controlPlaneEndpoint: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane:6443
      controllerManager:
        extraArgs:
          enable-hostpath-provisioner: "true"
      dns: {}
      etcd:
        local:
          dataDir: /var/lib/etcd
      imageRepository: registry.k8s.io
      kind: ClusterConfiguration
      kubernetesVersion: v1.26.3
      networking:
        dnsDomain: cluster.local
        podSubnet: 10.244.0.0/16
        serviceSubnet: 10.96.0.0/16
      scheduler: {}
  kind: ConfigMap
  metadata:
    creationTimestamp: "2023-04-02T20:55:27Z"
    name: kubeadm-config
    namespace: kube-system
    resourceVersion: "197"
    uid: 75767601-b329-4245-881b-b99afd26ebf9
- apiVersion: v1
  data:
    kubelet: |
      apiVersion: kubelet.config.k8s.io/v1beta1
      authentication:
        anonymous:
          enabled: false
        webhook:
          cacheTTL: 0s
          enabled: true
        x509:
          clientCAFile: /etc/kubernetes/pki/ca.crt
      authorization:
        mode: Webhook
        webhook:
          cacheAuthorizedTTL: 0s
          cacheUnauthorizedTTL: 0s
      cgroupDriver: systemd
      cgroupRoot: /kubelet
      clusterDNS:
      - 10.96.0.10
      clusterDomain: cluster.local
      cpuManagerReconcilePeriod: 0s
      evictionHard:
        imagefs.available: 0%
        nodefs.available: 0%
        nodefs.inodesFree: 0%
      evictionPressureTransitionPeriod: 0s
      failSwapOn: false
      fileCheckFrequency: 0s
      healthzBindAddress: 127.0.0.1
      healthzPort: 10248
      httpCheckFrequency: 0s
      imageGCHighThresholdPercent: 100
      imageMinimumGCAge: 0s
      kind: KubeletConfiguration
      logging:
        flushFrequency: 0
        options:
          json:
            infoBufferSize: "0"
        verbosity: 0
      memorySwap: {}
      nodeStatusReportFrequency: 0s
      nodeStatusUpdateFrequency: 0s
      rotateCertificates: true
      runtimeRequestTimeout: 0s
      shutdownGracePeriod: 0s
      shutdownGracePeriodCriticalPods: 0s
      staticPodPath: /etc/kubernetes/manifests
      streamingConnectionIdleTimeout: 0s
      syncFrequency: 0s
      volumeStatsAggPeriod: 0s
  kind: ConfigMap
  metadata:
    creationTimestamp: "2023-04-02T20:55:28Z"
    name: kubelet-config
    namespace: kube-system
    resourceVersion: "200"
    uid: 52d1f3b2-3449-43fd-9f7a-55db3108e7ca
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl
      cm5ldGVzMB4XDTIzMDQwMjIwNTUxOFoXDTMzMDMzMDIwNTUxOFowFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANN5
      aX93NlecWhoYFdg0AA3BYpTKBR8jZQRklU+8oKksadHghxHXBoRp0fKiwtt9VHBf
      hvphPaboHTSado7YHWcS0G1UDtd2Bv42l6QoHizm+DbrCF9dXWZZhLy5fPooNc/p
      o69Ba16vSdAig9KXtsgRYB55hf+Rigg5BezK3edO004fp1jRs//Iyyl6F6SkgpY9
      0M4JOx6kNbpSP1oQS1BuuAzepAdFkOi07R8Sta/EWpGITdSjfRi3sP/TWUit6DWc
      Uwld7FLfZTxGpi63quUq7pDBt0RMEVBnqMHLpMMcZCO2KihcCvJcdTuW0U5kB8H1
      UaF2Oq0d9K7RUZea7vcCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB
      /wQFMAMBAf8wHQYDVR0OBBYEFGQV55pKDS3ulXD0JWrbowlCNGl7MBUGA1UdEQQO
      MAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAHDPos7pzOuQ+Pt+2AvI
      BOBZj1NTiZ/Me2IqODlRSck/ihVn2xEcoeaF+fF5XZwMGVoQNF0qtNnPLZ97HY9V
      1pO2jg1EPnUvrJeoNYnmCVO2y048JUeu4HiQ0J4BvW2k16OLPyO/FgD1WXgan5ls
      Iryz8i+t2CFSRs2L5HL5KkCVnmmpuYriBJpeIfMa5GTIVsFAn6PxVeKQPY94HFE/
      RQnmiLPV3Y1vUiKD4fSIqPlq7PxkgOcOq+cZP7E6ap4xAVDEoOyFTd4gg5WhfBQd
      Do1cHsEWvAsTznnZhj5zGffRoN8KOuTb0gTWTpF2Tk8u7Uxuc9ln0ZEKwHHHv9PJ
      IIY=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2023-04-02T20:55:42Z"
    name: kube-root-ca.crt
    namespace: local-path-storage
    resourceVersion: "371"
    uid: 97875da4-aada-4baf-ba6f-96f3af1037ea
- apiVersion: v1
  data:
    config.json: |-
      {
              "nodePathMap":[
              {
                      "node":"DEFAULT_PATH_FOR_NON_LISTED_NODES",
                      "paths":["/var/local-path-provisioner"]
              }
              ]
      }
    helperPod.yaml: |-
      apiVersion: v1
      kind: Pod
      metadata:
        name: helper-pod
      spec:
        containers:
        - name: helper-pod
          image: docker.io/kindest/local-path-helper:v20230330-48f316cd@sha256:135203f2441f916fb13dad1561d27f60a6f11f50ec288b01a7d2ee9947c36270
          imagePullPolicy: IfNotPresent
    setup: |-
      #!/bin/sh
      set -eu
      mkdir -m 0777 -p "$VOL_DIR"
    teardown: |-
      #!/bin/sh
      set -eu
      rm -rf "$VOL_DIR"
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"config.json":"{\n        \"nodePathMap\":[\n        {\n                \"node\":\"DEFAULT_PATH_FOR_NON_LISTED_NODES\",\n                \"paths\":[\"/var/local-path-provisioner\"]\n        }\n        ]\n}","helperPod.yaml":"apiVersion: v1\nkind: Pod\nmetadata:\n  name: helper-pod\nspec:\n  containers:\n  - name: helper-pod\n    image: docker.io/kindest/local-path-helper:v20230330-48f316cd@sha256:135203f2441f916fb13dad1561d27f60a6f11f50ec288b01a7d2ee9947c36270\n    imagePullPolicy: IfNotPresent","setup":"#!/bin/sh\nset -eu\nmkdir -m 0777 -p \"$VOL_DIR\"","teardown":"#!/bin/sh\nset -eu\nrm -rf \"$VOL_DIR\""},"kind":"ConfigMap","metadata":{"annotations":{},"name":"local-path-config","namespace":"local-path-storage"}}
    creationTimestamp: "2023-04-02T20:55:31Z"
    name: local-path-config
    namespace: local-path-storage
    resourceVersion: "281"
    uid: 88fe091f-15a7-4855-b754-0eaf79fbff74
- apiVersion: v1
  kind: Endpoints
  metadata:
    creationTimestamp: "2023-04-02T20:55:27Z"
    labels:
      endpointslice.kubernetes.io/skip-mirror: "true"
    name: kubernetes
    namespace: default
    resourceVersion: "195"
    uid: 9f06a82e-24d1-44c1-ab26-8bae39e2a736
  subsets:
  - addresses:
    - ip: 172.18.0.3
    ports:
    - name: https
      port: 6443
      protocol: TCP
- apiVersion: v1
  kind: Endpoints
  metadata:
    annotations:
      endpoints.kubernetes.io/last-change-trigger-time: "2023-04-02T20:55:46Z"
    creationTimestamp: "2023-04-02T20:55:41Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "433"
    uid: f01cc85a-939d-4917-bfc0-5c14ee4b5a79
  subsets:
  - addresses:
    - ip: 10.244.0.2
      nodeName: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
      targetRef:
        kind: Pod
        name: coredns-787d4945fb-mbpx5
        namespace: kube-system
        uid: e1864c5f-2359-4292-bad8-f4a661291f7d
    - ip: 10.244.0.3
      nodeName: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
      targetRef:
        kind: Pod
        name: coredns-787d4945fb-pdx4q
        namespace: kube-system
        uid: 9ddd75f5-53a8-4bfb-9d52-f5664e7a43ea
    ports:
    - name: dns-tcp
      port: 53
      protocol: TCP
    - name: dns
      port: 53
      protocol: UDP
    - name: metrics
      port: 9153
      protocol: TCP
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2023-04-02T20:55:27Z"
    labels:
      kubernetes.io/metadata.name: default
    name: default
    resourceVersion: "191"
    uid: 7fed505b-5b33-4112-b8f0-733e975ac63f
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2023-04-02T20:55:26Z"
    labels:
      kubernetes.io/metadata.name: kube-node-lease
    name: kube-node-lease
    resourceVersion: "6"
    uid: 8e0f7958-006b-431b-bb4a-b8a4e21781b4
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2023-04-02T20:55:26Z"
    labels:
      kubernetes.io/metadata.name: kube-public
    name: kube-public
    resourceVersion: "5"
    uid: 4b599684-7621-4eac-96ab-234fe4ed4ce8
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2023-04-02T20:55:26Z"
    labels:
      kubernetes.io/metadata.name: kube-system
    name: kube-system
    resourceVersion: "4"
    uid: a1e91239-3d63-4072-951b-5cb7ee4b2580
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: Namespace
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Namespace","metadata":{"annotations":{},"name":"local-path-storage"}}
    creationTimestamp: "2023-04-02T20:55:31Z"
    labels:
      kubernetes.io/metadata.name: local-path-storage
    name: local-path-storage
    resourceVersion: "275"
    uid: 04459d2a-9c0f-4234-9470-dff2fc4aa20c
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: Node
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Node","metadata":{"annotations":{"kwok.x-k8s.io/node":"fake","node.alpha.kubernetes.io/ttl":"0"},"labels":{"beta.kubernetes.io/arch":"amd64","beta.kubernetes.io/os":"linux","kubernetes.io/arch":"amd64","kubernetes.io/hostname":"fake-node","kubernetes.io/os":"linux","kubernetes.io/role":"agent","node-role.kubernetes.io/agent":"","type":"kwok-controller"},"name":"fake-node"}}
      kwok.x-k8s.io/node: fake
      node.alpha.kubernetes.io/ttl: "0"
    creationTimestamp: "2023-04-02T20:55:51Z"
    labels:
      beta.kubernetes.io/arch: amd64
      beta.kubernetes.io/os: linux
      kubernetes.io/arch: amd64
      kubernetes.io/hostname: fake-node
      kubernetes.io/os: linux
      kubernetes.io/role: agent
      node-role.kubernetes.io/agent: ""
      type: kwok-controller
    name: fake-node
    resourceVersion: "527"
    uid: 283a0b51-2d80-44ad-a223-ab23b7ae5888
  spec:
    podCIDR: 10.244.1.0/24
    podCIDRs:
    - 10.244.1.0/24
  status:
    addresses:
    - address: 172.18.0.3
      type: InternalIP
    - address: kwok-controller.kube-system.svc
      type: Hostname
    allocatable:
      cpu: 1k
      memory: 1Ti
      pods: 1M
    capacity:
      cpu: 1k
      memory: 1Ti
      pods: 1M
    conditions:
    - lastHeartbeatTime: "2023-04-02T20:56:14Z"
      lastTransitionTime: "2023-04-02T20:56:14Z"
      message: kubelet is posting ready status
      reason: KubeletReady
      status: "True"
      type: Ready
    - lastHeartbeatTime: "2023-04-02T20:56:14Z"
      lastTransitionTime: "2023-04-02T20:56:14Z"
      message: kubelet has sufficient memory available
      reason: KubeletHasSufficientMemory
      status: "False"
      type: MemoryPressure
    - lastHeartbeatTime: "2023-04-02T20:56:14Z"
      lastTransitionTime: "2023-04-02T20:56:14Z"
      message: kubelet has no disk pressure
      reason: KubeletHasNoDiskPressure
      status: "False"
      type: DiskPressure
    - lastHeartbeatTime: "2023-04-02T20:56:14Z"
      lastTransitionTime: "2023-04-02T20:56:14Z"
      message: kubelet has sufficient PID available
      reason: KubeletHasSufficientPID
      status: "False"
      type: PIDPressure
    - lastHeartbeatTime: "2023-04-02T20:56:14Z"
      lastTransitionTime: "2023-04-02T20:56:14Z"
      message: RouteController created a route
      reason: RouteCreated
      status: "False"
      type: NetworkUnavailable
    daemonEndpoints:
      kubeletEndpoint:
        Port: 10247
    nodeInfo:
      architecture: amd64
      bootID: ""
      containerRuntimeVersion: kwok-v0.1.0-251-ge045c22
      kernelVersion: kwok-v0.1.0-251-ge045c22
      kubeProxyVersion: kwok-v0.1.0-251-ge045c22
      kubeletVersion: kwok-v0.1.0-251-ge045c22
      machineID: ""
      operatingSystem: linux
      osImage: ""
      systemUUID: ""
    phase: Running
- apiVersion: v1
  kind: Node
  metadata:
    annotations:
      kubeadm.alpha.kubernetes.io/cri-socket: unix:///run/containerd/containerd.sock
      node.alpha.kubernetes.io/ttl: "0"
      volumes.kubernetes.io/controller-managed-attach-detach: "true"
    creationTimestamp: "2023-04-02T20:55:26Z"
    labels:
      beta.kubernetes.io/arch: amd64
      beta.kubernetes.io/os: linux
      kubernetes.io/arch: amd64
      kubernetes.io/hostname: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
      kubernetes.io/os: linux
      node-role.kubernetes.io/control-plane: ""
      node.kubernetes.io/exclude-from-external-load-balancers: ""
    name: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
    resourceVersion: "508"
    uid: ee0ea762-8f3a-46a3-bcc4-31352bada7d3
  spec:
    podCIDR: 10.244.0.0/24
    podCIDRs:
    - 10.244.0.0/24
    providerID: kind://docker/kwok-k8s-snapshot-cluster-kind-1-26-3/kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
    taints:
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      timeAdded: "2023-04-02T20:55:49Z"
    unschedulable: true
  status:
    addresses:
    - address: 172.18.0.3
      type: InternalIP
    - address: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
      type: Hostname
    allocatable:
      cpu: "16"
      ephemeral-storage: 957811888Ki
      hugepages-1Gi: "0"
      hugepages-2Mi: "0"
      memory: 32258528Ki
      pods: "110"
    capacity:
      cpu: "16"
      ephemeral-storage: 957811888Ki
      hugepages-1Gi: "0"
      hugepages-2Mi: "0"
      memory: 32258528Ki
      pods: "110"
    conditions:
    - lastHeartbeatTime: "2023-04-02T20:56:00Z"
      lastTransitionTime: "2023-04-02T20:55:23Z"
      message: kubelet has sufficient memory available
      reason: KubeletHasSufficientMemory
      status: "False"
      type: MemoryPressure
    - lastHeartbeatTime: "2023-04-02T20:56:00Z"
      lastTransitionTime: "2023-04-02T20:55:23Z"
      message: kubelet has no disk pressure
      reason: KubeletHasNoDiskPressure
      status: "False"
      type: DiskPressure
    - lastHeartbeatTime: "2023-04-02T20:56:00Z"
      lastTransitionTime: "2023-04-02T20:55:23Z"
      message: kubelet has sufficient PID available
      reason: KubeletHasSufficientPID
      status: "False"
      type: PIDPressure
    - lastHeartbeatTime: "2023-04-02T20:56:00Z"
      lastTransitionTime: "2023-04-02T20:55:44Z"
      message: kubelet is posting ready status
      reason: KubeletReady
      status: "True"
      type: Ready
    daemonEndpoints:
      kubeletEndpoint:
        Port: 10250
    images:
    - names:
      - registry.k8s.io/etcd:3.5.6-0
      sizeBytes: 102542580
    - names:
      - docker.io/library/import-2023-03-30@sha256:ba097b515c8c40689733c0f19de377e9bf8995964b7d7150c2045f3dfd166657
      - registry.k8s.io/kube-apiserver:v1.26.3
      sizeBytes: 80392681
    - names:
      - docker.io/library/import-2023-04-02@sha256:88afa353e211353f5d1771ab23b00920e47ed7f23d6886ae9a4aab7cbae7e45d
      - docker.io/local/kwok:v0.1.0-258-g209d747
      sizeBytes: 69554111
    - names:
      - docker.io/library/import-2023-03-30@sha256:8dbb345de79d1c44f59a7895da702a5f71997ae72aea056609445c397b0c10dc
      - registry.k8s.io/kube-controller-manager:v1.26.3
      sizeBytes: 68538487
    - names:
      - docker.io/library/import-2023-03-30@sha256:44db4d50a5f9c8efbac0d37ea974d1c0419a5928f90748d3d491a041a00c20b5
      - registry.k8s.io/kube-proxy:v1.26.3
      sizeBytes: 67217404
    - names:
      - docker.io/library/import-2023-03-30@sha256:3dd2337f70af979c7362b5e52bbdfcb3a5fd39c78d94d02145150cd2db86ba39
      - registry.k8s.io/kube-scheduler:v1.26.3
      sizeBytes: 57761399
    - names:
      - docker.io/kindest/kindnetd:v20230330-48f316cd@sha256:c19d6362a6a928139820761475a38c24c0cf84d507b9ddf414a078cf627497af
      - docker.io/kindest/kindnetd@sha256:c19d6362a6a928139820761475a38c24c0cf84d507b9ddf414a078cf627497af
      sizeBytes: 27726335
    - names:
      - docker.io/kindest/local-path-provisioner:v0.0.23-kind.0@sha256:f2d0a02831ff3a03cf51343226670d5060623b43a4cfc4808bd0875b2c4b9501
      - docker.io/kindest/local-path-provisioner@sha256:f2d0a02831ff3a03cf51343226670d5060623b43a4cfc4808bd0875b2c4b9501
      sizeBytes: 18664669
    - names:
      - registry.k8s.io/coredns/coredns:v1.9.3
      sizeBytes: 14837849
    - names:
      - docker.io/kindest/local-path-helper:v20230330-48f316cd@sha256:135203f2441f916fb13dad1561d27f60a6f11f50ec288b01a7d2ee9947c36270
      sizeBytes: 3052037
    - names:
      - registry.k8s.io/pause:3.7
      sizeBytes: 311278
    nodeInfo:
      architecture: amd64
      bootID: f7880b4e-8464-4d58-9f9a-dd105bda3af4
      containerRuntimeVersion: containerd://1.6.19-46-g941215f49
      kernelVersion: 6.1.6-060106-generic
      kubeProxyVersion: v1.26.3
      kubeletVersion: v1.26.3
      machineID: 8dc1c80c427d40b3b066b2ba067121ad
      operatingSystem: linux
      osImage: Ubuntu 22.04.2 LTS
      systemUUID: 43a0f41f-e045-48eb-9570-3ea29c4e37ce
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-04-02T20:55:51Z"
    generateName: fake-pod-bd6899c7d-
    labels:
      app: fake-pod
      pod-template-hash: bd6899c7d
    name: fake-pod-bd6899c7d-vcs5t
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fake-pod-bd6899c7d
      uid: aeabb82a-96f1-47e4-af66-4e6bb891a100
    resourceVersion: "491"
    uid: 39626e26-c0f2-4ac0-a609-c322e47ce933
  spec:
    containers:
    - image: fake
      imagePullPolicy: Always
      name: fake-pod
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-scqbf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: fake-node
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-scqbf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: fake
      imageID: ""
      lastState: {}
      name: fake-pod
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2023-04-02T20:55:53Z"
    hostIP: 172.18.0.3
    phase: Running
    podIP: 10.244.1.0
    podIPs:
    - ip: 10.244.1.0
    qosClass: BestEffort
    startTime: "2023-04-02T20:55:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-04-02T20:55:41Z"
    generateName: coredns-787d4945fb-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 787d4945fb
    name: coredns-787d4945fb-mbpx5
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-787d4945fb
      uid: bb39cd2f-ded2-419e-936d-0dd8cae6a8df
    resourceVersion: "422"
    uid: e1864c5f-2359-4292-bad8-f4a661291f7d
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.9.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4ktmw
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-4ktmw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a029a0ffe8cb1ab16f6ead241dc4575cf69fc522bb33ffcdabda7dc6d5a40876
      image: registry.k8s.io/coredns/coredns:v1.9.3
      imageID: sha256:5185b96f0becf59032b8e3646e99f84d9655dff3ac9e2605e0dc77f9c441ae4a
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-04-02T20:55:46Z"
    hostIP: 172.18.0.3
    phase: Running
    podIP: 10.244.0.2
    podIPs:
    - ip: 10.244.0.2
    qosClass: Burstable
    startTime: "2023-04-02T20:55:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-04-02T20:55:41Z"
    generateName: coredns-787d4945fb-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 787d4945fb
    name: coredns-787d4945fb-pdx4q
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-787d4945fb
      uid: bb39cd2f-ded2-419e-936d-0dd8cae6a8df
    resourceVersion: "432"
    uid: 9ddd75f5-53a8-4bfb-9d52-f5664e7a43ea
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.9.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mxxq7
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-mxxq7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b982762767749f776468fc660cae67c2dcc302042c5b0c5b1692ae2d2bb6274d
      image: registry.k8s.io/coredns/coredns:v1.9.3
      imageID: sha256:5185b96f0becf59032b8e3646e99f84d9655dff3ac9e2605e0dc77f9c441ae4a
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-04-02T20:55:46Z"
    hostIP: 172.18.0.3
    phase: Running
    podIP: 10.244.0.3
    podIPs:
    - ip: 10.244.0.3
    qosClass: Burstable
    startTime: "2023-04-02T20:55:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://172.18.0.3:2379
      kubernetes.io/config.hash: 8e5caa7eb9a8e7d0a77a87676ce43859
      kubernetes.io/config.mirror: 8e5caa7eb9a8e7d0a77a87676ce43859
      kubernetes.io/config.seen: "2023-04-02T20:55:29.824381515Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-04-02T20:55:30Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
      uid: ee0ea762-8f3a-46a3-bcc4-31352bada7d3
    resourceVersion: "381"
    uid: 644934f4-fb8f-4d4a-ae1d-807f1228ef9a
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://172.18.0.3:2379
      - --cert-file=/etc/kubernetes/pki/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/etcd
      - --experimental-initial-corrupt-check=true
      - --experimental-watch-progress-notify-interval=5s
      - --initial-advertise-peer-urls=https://172.18.0.3:2380
      - --initial-cluster=kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane=https://172.18.0.3:2380
      - --key-file=/etc/kubernetes/pki/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://172.18.0.3:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://172.18.0.3:2380
      - --name=kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
      - --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/etc/kubernetes/pki/etcd/peer.key
      - --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
      - --snapshot-count=10000
      - --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
      image: registry.k8s.io/etcd:3.5.6-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /health?exclude=NOSPACE&serializable=true
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /health?serializable=false
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/etcd
        name: etcd-data
      - mountPath: /etc/kubernetes/pki/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/pki/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:30Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:30Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9a4e9a38b884b0321d6aa9c42b5a71adb2fe033dfe7c777e96cdcea9491cd3b8
      image: registry.k8s.io/etcd:3.5.6-0
      imageID: sha256:fce326961ae2d51a5f726883fd59d2a8c2ccc3e45d3bb859882db58e422e59e7
      lastState: {}
      name: etcd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-04-02T20:55:24Z"
    hostIP: 172.18.0.3
    phase: Running
    podIP: 172.18.0.3
    podIPs:
    - ip: 172.18.0.3
    qosClass: Burstable
    startTime: "2023-04-02T20:55:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-04-02T20:55:42Z"
    generateName: kindnet-
    labels:
      app: kindnet
      controller-revision-hash: 5dbd75f797
      k8s-app: kindnet
      pod-template-generation: "1"
      tier: node
    name: kindnet-2h742
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kindnet
      uid: 90a7f4aa-e436-4216-9491-a81a89d0d23d
    resourceVersion: "392"
    uid: b6598802-d402-4431-bc35-378426e2374c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
    containers:
    - env:
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: POD_SUBNET
        value: 10.244.0.0/16
      - name: CONTROL_PLANE_ENDPOINT
        value: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane:6443
      image: docker.io/kindest/kindnetd:v20230330-48f316cd@sha256:c19d6362a6a928139820761475a38c24c0cf84d507b9ddf414a078cf627497af
      imagePullPolicy: IfNotPresent
      name: kindnet-cni
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_RAW
          - NET_ADMIN
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/cni/net.d
        name: cni-cfg
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rc669
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kindnet
    serviceAccountName: kindnet
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-cfg
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-rc669
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://de47599d81899439598c12c9fdbba56cd056c2589839f852915aeda7c29f3f45
      image: sha256:a329ae3c2c52fe00e9c4eaf48b081cd184ee4bf9aea059e497f4965f0a8deedb
      imageID: docker.io/kindest/kindnetd:v20230330-48f316cd@sha256:c19d6362a6a928139820761475a38c24c0cf84d507b9ddf414a078cf627497af
      lastState: {}
      name: kindnet-cni
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-04-02T20:55:44Z"
    hostIP: 172.18.0.3
    phase: Running
    podIP: 172.18.0.3
    podIPs:
    - ip: 172.18.0.3
    qosClass: Guaranteed
    startTime: "2023-04-02T20:55:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-04-02T20:55:51Z"
    generateName: kindnet-
    labels:
      app: kindnet
      controller-revision-hash: 5dbd75f797
      k8s-app: kindnet
      pod-template-generation: "1"
      tier: node
    name: kindnet-jghpb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kindnet
      uid: 90a7f4aa-e436-4216-9491-a81a89d0d23d
    resourceVersion: "492"
    uid: 0224e0da-c166-45ad-a8c4-ce7de7af8475
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - fake-node
    containers:
    - env:
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: POD_SUBNET
        value: 10.244.0.0/16
      - name: CONTROL_PLANE_ENDPOINT
        value: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane:6443
      image: docker.io/kindest/kindnetd:v20230330-48f316cd@sha256:c19d6362a6a928139820761475a38c24c0cf84d507b9ddf414a078cf627497af
      imagePullPolicy: IfNotPresent
      name: kindnet-cni
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_RAW
          - NET_ADMIN
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/cni/net.d
        name: cni-cfg
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6l7w5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: fake-node
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kindnet
    serviceAccountName: kindnet
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-cfg
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-6l7w5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: docker.io/kindest/kindnetd:v20230330-48f316cd@sha256:c19d6362a6a928139820761475a38c24c0cf84d507b9ddf414a078cf627497af
      imageID: ""
      lastState: {}
      name: kindnet-cni
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2023-04-02T20:55:53Z"
    hostIP: 172.18.0.3
    phase: Running
    podIP: 172.18.0.3
    podIPs:
    - ip: 172.18.0.3
    qosClass: Guaranteed
    startTime: "2023-04-02T20:55:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 172.18.0.3:6443
      kubernetes.io/config.hash: dcd794b3f1dfbc07e323fb5df32a992a
      kubernetes.io/config.mirror: dcd794b3f1dfbc07e323fb5df32a992a
      kubernetes.io/config.seen: "2023-04-02T20:55:29.824362309Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-04-02T20:55:29Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
      uid: ee0ea762-8f3a-46a3-bcc4-31352bada7d3
    resourceVersion: "298"
    uid: 567988f0-d7ef-4e91-8625-0ffd0ae5b561
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=172.18.0.3
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --enable-admission-plugins=NodeRestriction
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt
      - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt
      - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt
      - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt
      - --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --runtime-config=
      - --secure-port=6443
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --service-account-key-file=/etc/kubernetes/pki/sa.pub
      - --service-account-signing-key-file=/etc/kubernetes/pki/sa.key
      - --service-cluster-ip-range=10.96.0.0/16
      - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
      - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
      image: registry.k8s.io/kube-apiserver:v1.26.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 172.18.0.3
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 172.18.0.3
          path: /readyz
          port: 6443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 172.18.0.3
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0263c909edec747cebb31f14bbbadd91521c2d2d0d5f45b071b8b21dbd6ea5b6
      image: registry.k8s.io/kube-apiserver:v1.26.3
      imageID: docker.io/library/import-2023-03-30@sha256:ba097b515c8c40689733c0f19de377e9bf8995964b7d7150c2045f3dfd166657
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-04-02T20:55:23Z"
    hostIP: 172.18.0.3
    phase: Running
    podIP: 172.18.0.3
    podIPs:
    - ip: 172.18.0.3
    qosClass: Burstable
    startTime: "2023-04-02T20:55:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 79fea449d436e53c2fabb3afd8d4e501
      kubernetes.io/config.mirror: 79fea449d436e53c2fabb3afd8d4e501
      kubernetes.io/config.seen: "2023-04-02T20:55:29.824373274Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-04-02T20:55:30Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
      uid: ee0ea762-8f3a-46a3-bcc4-31352bada7d3
    resourceVersion: "293"
    uid: 7d0d1476-9f3d-4699-864d-0e60a689f565
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --allocate-node-cidrs=true
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --cluster-cidr=10.244.0.0/16
      - --cluster-name=kwok-k8s-snapshot-cluster-kind-1-26-3
      - --cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt
      - --cluster-signing-key-file=/etc/kubernetes/pki/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --enable-hostpath-provisioner=true
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=true
      - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
      - --root-ca-file=/etc/kubernetes/pki/ca.crt
      - --service-account-private-key-file=/etc/kubernetes/pki/sa.key
      - --service-cluster-ip-range=10.96.0.0/16
      - --use-service-account-credentials=true
      image: registry.k8s.io/kube-controller-manager:v1.26.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:30Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:30Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://538abac70221c88f5bfcfaf63a5d13412a48cb20fbd78d0ed4bc07459d605941
      image: registry.k8s.io/kube-controller-manager:v1.26.3
      imageID: docker.io/library/import-2023-03-30@sha256:8dbb345de79d1c44f59a7895da702a5f71997ae72aea056609445c397b0c10dc
      lastState: {}
      name: kube-controller-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-04-02T20:55:23Z"
    hostIP: 172.18.0.3
    phase: Running
    podIP: 172.18.0.3
    podIPs:
    - ip: 172.18.0.3
    qosClass: Burstable
    startTime: "2023-04-02T20:55:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-04-02T20:55:51Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 5cbfdcddd5
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-6jc6s
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: fdd9f6a7-d8a5-4ed7-82eb-e592bac04924
    resourceVersion: "493"
    uid: bea9c673-1ef5-460a-8bb3-732e2211e2c5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - fake-node
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.26.3
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wbmrn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: fake-node
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-wbmrn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: registry.k8s.io/kube-proxy:v1.26.3
      imageID: ""
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2023-04-02T20:55:53Z"
    hostIP: 172.18.0.3
    phase: Running
    podIP: 172.18.0.3
    podIPs:
    - ip: 172.18.0.3
    qosClass: BestEffort
    startTime: "2023-04-02T20:55:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-04-02T20:55:42Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 5cbfdcddd5
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-x5c9b
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: fdd9f6a7-d8a5-4ed7-82eb-e592bac04924
    resourceVersion: "385"
    uid: e0883884-04f0-497a-b969-2da22171ba5c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.26.3
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d2gpb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-d2gpb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a5886ad26b40332efd57429fd58c35c009529af536ee64dbe9fddc1e8e24c905
      image: registry.k8s.io/kube-proxy:v1.26.3
      imageID: docker.io/library/import-2023-03-30@sha256:44db4d50a5f9c8efbac0d37ea974d1c0419a5928f90748d3d491a041a00c20b5
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-04-02T20:55:43Z"
    hostIP: 172.18.0.3
    phase: Running
    podIP: 172.18.0.3
    podIPs:
    - ip: 172.18.0.3
    qosClass: BestEffort
    startTime: "2023-04-02T20:55:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: d78a4b58c7f8481b89638bae7621c611
      kubernetes.io/config.mirror: d78a4b58c7f8481b89638bae7621c611
      kubernetes.io/config.seen: "2023-04-02T20:55:29.824377185Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-04-02T20:55:30Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
      uid: ee0ea762-8f3a-46a3-bcc4-31352bada7d3
    resourceVersion: "335"
    uid: b3fe3cba-c0ee-496a-9875-b49374ab1552
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=true
      image: registry.k8s.io/kube-scheduler:v1.26.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://efc470004ea5f8dbe6849677003a65039bbe0ac6e3c42a5e7d456675dec1af6c
      image: registry.k8s.io/kube-scheduler:v1.26.3
      imageID: docker.io/library/import-2023-03-30@sha256:3dd2337f70af979c7362b5e52bbdfcb3a5fd39c78d94d02145150cd2db86ba39
      lastState: {}
      name: kube-scheduler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-04-02T20:55:23Z"
    hostIP: 172.18.0.3
    phase: Running
    podIP: 172.18.0.3
    podIPs:
    - ip: 172.18.0.3
    qosClass: Burstable
    startTime: "2023-04-02T20:55:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 2bf3ab47072c7d276ac93cc77f8ab3a8
      kubernetes.io/config.mirror: 2bf3ab47072c7d276ac93cc77f8ab3a8
      kubernetes.io/config.seen: "2023-04-02T20:55:49.720167289Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2023-04-02T20:55:49Z"
    labels:
      app: kwok-controller
    name: kwok-controller-kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
      uid: ee0ea762-8f3a-46a3-bcc4-31352bada7d3
    resourceVersion: "521"
    uid: b272178d-813b-43ab-be43-0d7515d77b8c
  spec:
    containers:
    - args:
      - --config=/etc/kwok/kwok.yaml
      - --manage-all-nodes=false
      - --manage-nodes-with-annotation-selector=kwok.x-k8s.io/node=fake
      - --manage-nodes-with-label-selector=
      - --disregard-status-with-annotation-selector=kwok.x-k8s.io/status=custom
      - --disregard-status-with-label-selector=
      - --kubeconfig=/etc/kubernetes/admin.conf
      - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
      - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
      - --node-ip=$(POD_IP)
      - --node-name=kwok-controller.kube-system.svc
      - --node-port=10247
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: local/kwok:v0.1.0-258-g209d747
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 10247
          scheme: HTTP
        initialDelaySeconds: 2
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      name: kwok-controller
      readinessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: 10247
          scheme: HTTP
        initialDelaySeconds: 2
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/admin.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /etc/kwok/kwok.yaml
        name: config
        readOnly: true
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/admin.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /etc/kwok/kwok.yaml
        type: FileOrCreate
      name: config
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:56:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:56:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://552b0f5f889f0ded32f55239e7cbc373301fd222ab5e4ec8a9e7f8da465364b1
      image: docker.io/local/kwok:v0.1.0-258-g209d747
      imageID: docker.io/library/import-2023-04-02@sha256:88afa353e211353f5d1771ab23b00920e47ed7f23d6886ae9a4aab7cbae7e45d
      lastState: {}
      name: kwok-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-04-02T20:55:50Z"
    hostIP: 172.18.0.3
    phase: Running
    podIP: 172.18.0.3
    podIPs:
    - ip: 172.18.0.3
    qosClass: BestEffort
    startTime: "2023-04-02T20:55:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-04-02T20:55:41Z"
    generateName: local-path-provisioner-75f5b54ffd-
    labels:
      app: local-path-provisioner
      pod-template-hash: 75f5b54ffd
    name: local-path-provisioner-75f5b54ffd-kkkkd
    namespace: local-path-storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: local-path-provisioner-75f5b54ffd
      uid: 2fc59b88-edbb-42a7-8eda-eb5cbf38b837
    resourceVersion: "441"
    uid: ae59adb1-9d77-445e-88a7-c4c3a4655ce0
  spec:
    containers:
    - command:
      - local-path-provisioner
      - --debug
      - start
      - --helper-image
      - docker.io/kindest/local-path-helper:v20230330-48f316cd@sha256:135203f2441f916fb13dad1561d27f60a6f11f50ec288b01a7d2ee9947c36270
      - --config
      - /etc/config/config.json
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: docker.io/kindest/local-path-provisioner:v0.0.23-kind.0@sha256:f2d0a02831ff3a03cf51343226670d5060623b43a4cfc4808bd0875b2c4b9501
      imagePullPolicy: IfNotPresent
      name: local-path-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mtj6l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: local-path-provisioner-service-account
    serviceAccountName: local-path-provisioner-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Equal
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Equal
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: local-path-config
      name: config-volume
    - name: kube-api-access-mtj6l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-02T20:55:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9869dc591e6216dac8de2deb7d950d1c337431d27499a049aba36a4ba2f5be76
      image: sha256:c408b2276bb76627a6f633bf0d26052c208ebd51681c6c89866cc9647471c0bc
      imageID: docker.io/kindest/local-path-provisioner:v0.0.23-kind.0@sha256:f2d0a02831ff3a03cf51343226670d5060623b43a4cfc4808bd0875b2c4b9501
      lastState: {}
      name: local-path-provisioner
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-04-02T20:55:48Z"
    hostIP: 172.18.0.3
    phase: Running
    podIP: 10.244.0.4
    podIPs:
    - ip: 10.244.0.4
    qosClass: BestEffort
    startTime: "2023-04-02T20:55:45Z"
- apiVersion: v1
  data:
    auth-extra-groups: c3lzdGVtOmJvb3RzdHJhcHBlcnM6a3ViZWFkbTpkZWZhdWx0LW5vZGUtdG9rZW4=
    expiration: MjAyMy0wNC0wM1QyMDo1NToyOVo=
    token-id: YWJjZGVm
    token-secret: MDEyMzQ1Njc4OWFiY2RlZg==
    usage-bootstrap-authentication: dHJ1ZQ==
    usage-bootstrap-signing: dHJ1ZQ==
  kind: Secret
  metadata:
    creationTimestamp: "2023-04-02T20:55:29Z"
    name: bootstrap-token-abcdef
    namespace: kube-system
    resourceVersion: "220"
    uid: f2a43211-9b6f-4081-bf48-3f5602dd90eb
  type: bootstrap.kubernetes.io/token
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:41Z"
    name: default
    namespace: default
    resourceVersion: "332"
    uid: ec56cbe7-3032-4830-ad4b-2fa0aa27c0ae
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:42Z"
    name: default
    namespace: kube-node-lease
    resourceVersion: "347"
    uid: 8f36bd27-1e35-4361-b7a5-60063d2de00e
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:41Z"
    name: default
    namespace: kube-public
    resourceVersion: "343"
    uid: c80c293d-7d6a-4ebd-bfd3-5b52ecb4afbc
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:30Z"
    name: attachdetach-controller
    namespace: kube-system
    resourceVersion: "260"
    uid: 2b83d912-f162-49b9-bb1d-6f54a01908bb
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:28Z"
    name: bootstrap-signer
    namespace: kube-system
    resourceVersion: "208"
    uid: 683f36bc-37d4-4dde-b7d1-e280778cdb5b
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:28Z"
    name: certificate-controller
    namespace: kube-system
    resourceVersion: "213"
    uid: 7f87babc-8f4e-41bf-b543-bcd6a59a20a7
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:41Z"
    name: clusterrole-aggregation-controller
    namespace: kube-system
    resourceVersion: "308"
    uid: 9cb40f23-d74a-4428-b0c9-f3568852d04d
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:29Z"
    name: coredns
    namespace: kube-system
    resourceVersion: "235"
    uid: 2447796f-5cad-443e-9905-699c5e664458
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:30Z"
    name: cronjob-controller
    namespace: kube-system
    resourceVersion: "258"
    uid: f16cf9a0-b00f-42a4-892d-29a4610c9657
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:28Z"
    name: daemon-set-controller
    namespace: kube-system
    resourceVersion: "206"
    uid: d85e47dd-e823-4f36-8acb-eb31205e0856
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:41Z"
    name: default
    namespace: kube-system
    resourceVersion: "340"
    uid: 98c92b0e-b25c-4bc9-be3e-b214f1598a40
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:31Z"
    name: deployment-controller
    namespace: kube-system
    resourceVersion: "282"
    uid: 5284560b-2b96-451d-b357-f27419b2809e
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:30Z"
    name: disruption-controller
    namespace: kube-system
    resourceVersion: "255"
    uid: 021a3ce0-5cbb-4c51-bcd7-4cda2ce33a18
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:30Z"
    name: endpoint-controller
    namespace: kube-system
    resourceVersion: "262"
    uid: dc751335-d8ec-4f64-8b13-4a972b8d4239
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:28Z"
    name: endpointslice-controller
    namespace: kube-system
    resourceVersion: "214"
    uid: dd505dae-ca72-4976-845d-569ee79c08e0
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:28Z"
    name: endpointslicemirroring-controller
    namespace: kube-system
    resourceVersion: "215"
    uid: 2c08c82d-c5ab-414f-af18-5a308daf5ee6
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:31Z"
    name: ephemeral-volume-controller
    namespace: kube-system
    resourceVersion: "274"
    uid: 4c2bbe44-d8d8-4aa3-b048-a4068e2cf805
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:31Z"
    name: expand-controller
    namespace: kube-system
    resourceVersion: "273"
    uid: 82ba0304-70d9-43ab-936f-492a7dbe1fd4
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:28Z"
    name: generic-garbage-collector
    namespace: kube-system
    resourceVersion: "217"
    uid: 4150541c-05f7-4d20-88f2-7c65ea870997
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:31Z"
    name: horizontal-pod-autoscaler
    namespace: kube-system
    resourceVersion: "268"
    uid: 6d48bd74-24f8-4b6e-bb01-e05862be08f9
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:29Z"
    name: job-controller
    namespace: kube-system
    resourceVersion: "231"
    uid: 9bf7b5ed-55d5-4259-94fa-fcf001ed2091
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:31Z"
    name: kindnet
    namespace: kube-system
    resourceVersion: "271"
    uid: b9455d56-bbcc-4395-bd49-2e10845bb14a
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:29Z"
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "241"
    uid: d247050c-309a-4c41-98c7-000fa39a76b2
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:28Z"
    name: namespace-controller
    namespace: kube-system
    resourceVersion: "212"
    uid: 5babfd90-6485-4df8-a67a-192fa27f20bc
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:29Z"
    name: node-controller
    namespace: kube-system
    resourceVersion: "229"
    uid: 4b3131b8-977a-4eac-882e-0c40ccb4e237
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:41Z"
    name: persistent-volume-binder
    namespace: kube-system
    resourceVersion: "307"
    uid: 633279be-c908-4e37-9f9b-dcf2fd695efe
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:30Z"
    name: pod-garbage-collector
    namespace: kube-system
    resourceVersion: "266"
    uid: 905d0c83-8aa4-43e0-b33b-e093599d268d
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:41Z"
    name: pv-protection-controller
    namespace: kube-system
    resourceVersion: "310"
    uid: 3d3b78a3-a835-4423-a8d1-66477f2b70c3
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:41Z"
    name: pvc-protection-controller
    namespace: kube-system
    resourceVersion: "309"
    uid: 6070c69d-576a-4a21-9f38-fc6ba70567ef
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:29Z"
    name: replicaset-controller
    namespace: kube-system
    resourceVersion: "248"
    uid: 2de4b08a-93ef-44ee-94e1-80efabedcb0d
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:28Z"
    name: replication-controller
    namespace: kube-system
    resourceVersion: "210"
    uid: 17753ae2-9981-4c14-ae06-a9ea1f369848
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:28Z"
    name: resourcequota-controller
    namespace: kube-system
    resourceVersion: "211"
    uid: 0d5b6aec-8385-4956-b6cb-77c6c85cc36f
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:41Z"
    name: root-ca-cert-publisher
    namespace: kube-system
    resourceVersion: "306"
    uid: a1893076-d853-4f00-9c31-88d457a6e4a8
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:30Z"
    name: service-account-controller
    namespace: kube-system
    resourceVersion: "267"
    uid: 0874e9a9-4d68-40ea-be51-8de5747b0427
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:41Z"
    name: service-controller
    namespace: kube-system
    resourceVersion: "305"
    uid: 1508703c-4325-45d4-ab2c-1c0dd98b334a
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:28Z"
    name: statefulset-controller
    namespace: kube-system
    resourceVersion: "207"
    uid: 2ae858fa-54f2-455a-a928-7f1b1fcf69ab
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:28Z"
    name: token-cleaner
    namespace: kube-system
    resourceVersion: "209"
    uid: e5daf606-de02-4c26-a876-6a4e16d88a87
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:29Z"
    name: ttl-after-finished-controller
    namespace: kube-system
    resourceVersion: "230"
    uid: 301d6739-7e90-40be-8055-147ca3633cff
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:29Z"
    name: ttl-controller
    namespace: kube-system
    resourceVersion: "218"
    uid: e9d585c7-8e6e-47ed-ae90-72501789ff2b
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2023-04-02T20:55:41Z"
    name: default
    namespace: local-path-storage
    resourceVersion: "338"
    uid: 19756eea-96fe-4e08-8eaf-3d9263fe8bce
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"name":"local-path-provisioner-service-account","namespace":"local-path-storage"}}
    creationTimestamp: "2023-04-02T20:55:31Z"
    name: local-path-provisioner-service-account
    namespace: local-path-storage
    resourceVersion: "276"
    uid: 22374fa5-cca7-4b3f-a54e-d8f1365752e5
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2023-04-02T20:55:27Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "193"
    uid: 8586cce9-c099-4a8f-b691-6cf370e6f3d4
  spec:
    clusterIP: 10.96.0.1
    clusterIPs:
    - 10.96.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2023-04-02T20:55:29Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "238"
    uid: b3c8eb71-24ba-4eb6-a2c5-78dcaade56fd
  spec:
    clusterIP: 10.96.0.10
    clusterIPs:
    - 10.96.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2023-04-02T20:55:31Z"
    generation: 1
    labels:
      app: kindnet
      k8s-app: kindnet
      tier: node
    name: kindnet
    namespace: kube-system
    resourceVersion: "496"
    uid: 90a7f4aa-e436-4216-9491-a81a89d0d23d
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: kindnet
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kindnet
          k8s-app: kindnet
          tier: node
      spec:
        containers:
        - env:
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: POD_SUBNET
            value: 10.244.0.0/16
          - name: CONTROL_PLANE_ENDPOINT
            value: kwok-k8s-snapshot-cluster-kind-1-26-3-control-plane:6443
          image: docker.io/kindest/kindnetd:v20230330-48f316cd@sha256:c19d6362a6a928139820761475a38c24c0cf84d507b9ddf414a078cf627497af
          imagePullPolicy: IfNotPresent
          name: kindnet-cni
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            capabilities:
              add:
              - NET_RAW
              - NET_ADMIN
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/cni/net.d
            name: cni-cfg
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kindnet
        serviceAccountName: kindnet
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /etc/cni/net.d
            type: ""
          name: cni-cfg
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2023-04-02T20:55:29Z"
    generation: 1
    labels:
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "495"
    uid: fdd9f6a7-d8a5-4ed7-82eb-e592bac04924
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        containers:
        - command:
          - /usr/local/bin/kube-proxy
          - --config=/var/lib/kube-proxy/config.conf
          - --hostname-override=$(NODE_NAME)
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: registry.k8s.io/kube-proxy:v1.26.3
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kube-proxy
            name: kube-proxy
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-proxy
          name: kube-proxy
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"fake-pod","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"fake-pod"}},"template":{"metadata":{"labels":{"app":"fake-pod"}},"spec":{"containers":[{"image":"fake","name":"fake-pod"}]}}}}
    creationTimestamp: "2023-04-02T20:55:51Z"
    generation: 1
    name: fake-pod
    namespace: default
    resourceVersion: "497"
    uid: 7b74661a-cc7b-45de-b214-3de74ca16938
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: fake-pod
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: fake-pod
      spec:
        containers:
        - image: fake
          imagePullPolicy: Always
          name: fake-pod
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-04-02T20:55:53Z"
      lastUpdateTime: "2023-04-02T20:55:53Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-04-02T20:55:51Z"
      lastUpdateTime: "2023-04-02T20:55:53Z"
      message: ReplicaSet "fake-pod-bd6899c7d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-04-02T20:55:29Z"
    generation: 1
    labels:
      k8s-app: kube-dns
    name: coredns
    namespace: kube-system
    resourceVersion: "436"
    uid: 2fbcc1e1-8dc1-469b-8ce5-23b56d38e23c
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.9.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2023-04-02T20:55:47Z"
      lastUpdateTime: "2023-04-02T20:55:47Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-04-02T20:55:41Z"
      lastUpdateTime: "2023-04-02T20:55:47Z"
      message: ReplicaSet "coredns-787d4945fb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"local-path-provisioner","namespace":"local-path-storage"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"local-path-provisioner"}},"template":{"metadata":{"labels":{"app":"local-path-provisioner"}},"spec":{"containers":[{"command":["local-path-provisioner","--debug","start","--helper-image","docker.io/kindest/local-path-helper:v20230330-48f316cd@sha256:135203f2441f916fb13dad1561d27f60a6f11f50ec288b01a7d2ee9947c36270","--config","/etc/config/config.json"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"docker.io/kindest/local-path-provisioner:v0.0.23-kind.0@sha256:f2d0a02831ff3a03cf51343226670d5060623b43a4cfc4808bd0875b2c4b9501","imagePullPolicy":"IfNotPresent","name":"local-path-provisioner","volumeMounts":[{"mountPath":"/etc/config/","name":"config-volume"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"local-path-provisioner-service-account","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/control-plane","operator":"Equal"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Equal"}],"volumes":[{"configMap":{"name":"local-path-config"},"name":"config-volume"}]}}}}
    creationTimestamp: "2023-04-02T20:55:31Z"
    generation: 1
    name: local-path-provisioner
    namespace: local-path-storage
    resourceVersion: "443"
    uid: 62f8a792-27e3-4a7b-90a8-2ace2f44f6c6
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: local-path-provisioner
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
      spec:
        containers:
        - command:
          - local-path-provisioner
          - --debug
          - start
          - --helper-image
          - docker.io/kindest/local-path-helper:v20230330-48f316cd@sha256:135203f2441f916fb13dad1561d27f60a6f11f50ec288b01a7d2ee9947c36270
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.io/kindest/local-path-provisioner:v0.0.23-kind.0@sha256:f2d0a02831ff3a03cf51343226670d5060623b43a4cfc4808bd0875b2c4b9501
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Equal
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-04-02T20:55:49Z"
      lastUpdateTime: "2023-04-02T20:55:49Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-04-02T20:55:41Z"
      lastUpdateTime: "2023-04-02T20:55:49Z"
      message: ReplicaSet "local-path-provisioner-75f5b54ffd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-04-02T20:55:51Z"
    generation: 1
    labels:
      app: fake-pod
      pod-template-hash: bd6899c7d
    name: fake-pod-bd6899c7d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: fake-pod
      uid: 7b74661a-cc7b-45de-b214-3de74ca16938
    resourceVersion: "494"
    uid: aeabb82a-96f1-47e4-af66-4e6bb891a100
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: fake-pod
        pod-template-hash: bd6899c7d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: fake-pod
          pod-template-hash: bd6899c7d
      spec:
        containers:
        - image: fake
          imagePullPolicy: Always
          name: fake-pod
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-04-02T20:55:41Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 787d4945fb
    name: coredns-787d4945fb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: 2fbcc1e1-8dc1-469b-8ce5-23b56d38e23c
    resourceVersion: "435"
    uid: bb39cd2f-ded2-419e-936d-0dd8cae6a8df
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 787d4945fb
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 787d4945fb
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.9.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2023-04-02T20:55:41Z"
    generation: 1
    labels:
      app: local-path-provisioner
      pod-template-hash: 75f5b54ffd
    name: local-path-provisioner-75f5b54ffd
    namespace: local-path-storage
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: local-path-provisioner
      uid: 62f8a792-27e3-4a7b-90a8-2ace2f44f6c6
    resourceVersion: "442"
    uid: 2fc59b88-edbb-42a7-8eda-eb5cbf38b837
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: local-path-provisioner
        pod-template-hash: 75f5b54ffd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
          pod-template-hash: 75f5b54ffd
      spec:
        containers:
        - command:
          - local-path-provisioner
          - --debug
          - start
          - --helper-image
          - docker.io/kindest/local-path-helper:v20230330-48f316cd@sha256:135203f2441f916fb13dad1561d27f60a6f11f50ec288b01a7d2ee9947c36270
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.io/kindest/local-path-provisioner:v0.0.23-kind.0@sha256:f2d0a02831ff3a03cf51343226670d5060623b43a4cfc4808bd0875b2c4b9501
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Equal
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: List
metadata:
  resourceVersion: ""
