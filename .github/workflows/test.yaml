name: Test

on:
  pull_request:
  push:

env:
  DOCKER_CLI_EXPERIMENTAL: 'enabled'
  CGO_ENABLED: '0'

jobs:
  test-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Build
        run: |
          make build

      - name: Build Image
        shell: bash
        run: |
          make build-image

      - name: Build Cluster Image
        shell: bash
        run: |
          make build-cluster-image

  test-kwok:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Install Kind
        shell: bash
        run: |
          ./hack/requirements.sh kind
          kind version

      - name: Install kubectl
        shell: bash
        run: |
          ./hack/requirements.sh kubectl
          kubectl version || :

      - name: Test Workable
        shell: bash
        run: |
          ./hack/e2e-test.sh kwok/kwok

  test-kwok-with-cni:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Install Kind
        shell: bash
        run: |
          ./hack/requirements.sh kind
          kind version

      - name: Install kubectl
        shell: bash
        run: |
          ./hack/requirements.sh kubectl
          kubectl version || :

      - name: Test Workable
        shell: bash
        run: |
          ./hack/e2e-test.sh kwok-with-cni/kwok-with-cni

  test-kwokctl:
    # https://docs.github.com/en/actions/using-jobs/using-concurrency
    concurrency:
      group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}-${{ matrix.os }}-${{ matrix.kwokctl-runtime }}
      cancel-in-progress: true

    # https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
    strategy:
      fail-fast: false
      matrix:
        os:
          # - ubuntu-latest
          - macos-latest
          # Linux containers are not supported on Windows Runner
          # https://github.com/orgs/community/discussions/25491#discussioncomment-3248089
          # - windows-latest
        kwokctl-runtime:
          # - binary
          # - docker
          - nerdctl
          # - kind
        # exclude:
        # No binary is provided by default for control plane components outside of Linux
        # https://www.downloadkubernetes.com
        # TODO: we can build the required binary
        # - os: macos-latest
        #   kwokctl-runtime: binary
        # - os: macos-latest
        #   kwokctl-runtime: nerdctl

    continue-on-error: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Install CoreUtils for MacOS
        if: ${{ matrix.os == 'macos-latest' && matrix.kwokctl-runtime != 'binary' }}
        shell: bash
        run: |
          brew install coreutils

      - name: Install Docker for MacOS
        if: ${{ matrix.os == 'macos-latest' && matrix.kwokctl-runtime != 'binary' }}
        shell: bash
        run: |
          brew install colima docker
          colima start --mount $HOME/.kwok/:w

      - name: Install lima for MacOS
        if: ${{ matrix.os == 'macos-latest' && matrix.kwokctl-runtime == 'nerdctl' }}
        shell: bash
        run: |
          brew install lima
          limactl start
          nerdctl=/tmp/nerdctl
          echo '#!/bin/bash' >> nerdctl
          echo 'set -x' >> nerdctl
          echo 'args="$@"' >> nerdctl
          echo 'bash -c "lima nerdctl $args"' >> nerdctl
          chmod +x nerdctl
          sudo mv nerdctl /usr/local/bin/nerdctl

      - name: Install Buildx
        if: ${{ matrix.kwokctl-runtime != 'binary' }}
        shell: bash
        run: |
          ./hack/requirements.sh buildx
          docker buildx version

      - name: Install Docker Compose V2
        if: ${{ matrix.kwokctl-runtime == 'docker' }}
        shell: bash
        run: |
          ./hack/requirements.sh compose
           docker compose version

      - name: Docker Info
        if: ${{ matrix.kwokctl-runtime != 'binary' }}
        shell: bash
        run: |
          docker info

      - name: Install Nerdctl and Start Containerd
        if: ${{ matrix.os != 'macos-latest' && matrix.kwokctl-runtime == 'nerdctl' }}
        shell: bash
        run: |
          curl -sSL https://github.com/containerd/nerdctl/releases/download/v1.2.0/nerdctl-full-1.2.0-linux-amd64.tar.gz -o - | sudo tar -xz -C /usr/local
          sudo systemctl daemon-reload
          sudo systemctl enable --now containerd
          containerd-rootless-setuptool.sh install
          sudo chmod 0755 /etc/cni

      - name: Make pki directory
        if: ${{ matrix.kwokctl-runtime == 'binary' }}
        shell: bash
        run: |
          sudo mkdir -p /var/run/kubernetes
          sudo chmod 777 /var/run/kubernetes

      - name: Install kubectl
        shell: bash
        run: |
          ./hack/requirements.sh kubectl
          kubectl version || :

      - name: Test Workable
        shell: bash
        run: |
          if [[ "${{ matrix.kwokctl-runtime }}" == "kind" ]]; then
            export LAST_RELEASE_SIZE=1
          elif [[ "${{ matrix.kwokctl-runtime }}" == "binary" || "${{ matrix.kwokctl-runtime }}" == "docker" ]]; then
            export LAST_RELEASE_SIZE=20
          else
            export LAST_RELEASE_SIZE=6
          fi
          ./hack/e2e-test.sh kwokctl/kwokctl_${{ matrix.kwokctl-runtime }}

      - name: Test Snapshot
        shell: bash
        run: |
          ./hack/e2e-test.sh kwokctl/kwokctl_${{ matrix.kwokctl-runtime }}_snapshot

      - name: Test Audit
        shell: bash
        run: |
          ./hack/e2e-test.sh kwokctl/kwokctl_${{ matrix.kwokctl-runtime }}_audit

      - name: Test Scheduler
        shell: bash
        run: |
          ./hack/e2e-test.sh kwokctl/kwokctl_${{ matrix.kwokctl-runtime }}_scheduler

      - name: Test Authorization
        shell: bash
        run: |
          ./hack/e2e-test.sh kwokctl/kwokctl_${{ matrix.kwokctl-runtime }}_authorization

      - name: Test Restart
        shell: bash
        run: |
          ./hack/e2e-test.sh kwokctl/kwokctl_${{ matrix.kwokctl-runtime }}_restart

      - name: Test Benchmark
        shell: bash
        continue-on-error: true
        run: |
          ./hack/e2e-test.sh kwokctl/kwokctl_${{ matrix.kwokctl-runtime }}_benchmark
